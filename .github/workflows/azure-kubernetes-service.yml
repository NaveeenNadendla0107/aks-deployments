name: Aks deploy
on: 
 workflow_dispatch:
   inputs:
     image:
      description: image
      required: true
      default: first-deploy-app
     
     containerregistry:
      description: 'containerregistry'
      required: true
      default: acr17
      
     ClusterName:
      description: 'clusterName'
      required: true
      default: 'test'
     
     resourceGroup:
      description: 'ClusterResourceGroup'
      required: true
      default: 'test01'
     
     appname:
      description: 'appname'
      required: true
      default: 'vote-app'
    
     helmchartname:
      description: 'helmchartname'
      required: true
      default: 'azure-vote-front'
#env:
 # CLUSTER_NAME: mongo1
  #CLUSTER_RESOURCE_GROUP: mongo-aks
  #NAMESPACE: default
  #REPO: mongoacr
  
jobs:
    Azure-login:
      #name: Azure Login
      runs-on: ubuntu-latest
      steps:
        - uses:  azure/login@v1
       # - name: Azure Login
          with:
           creds: ${{ secrets.AZURE_CREDENTIALS }}

    push-to-docker:
       if: ${{ always() }}
       needs: [Azure-login]
       runs-on: ubuntu-latest
       steps:
       - uses: actions/checkout@master
       - name: Azure Login
         uses: azure/login@v1
         with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
       # Install build
       - name: build
         run: |
          az acr build --image ${{ github.event.inputs.image}}:latest --registry ${{ github.event.inputs.containerregistry }} --file Dockerfile .
    helm-install:
          if: ${{ always() }}
          needs: [Azure-login,  push-to-docker]

          #name: Install Helm
          runs-on: ubuntu-latest
          steps:
            - uses: actions/checkout@master
           # - name: Helm install
            - run: |
               curl https://raw.githubusercontent.com/helm/helm/master/scripts/get-helm-3 | bash
     
    
         #- name: deploy
      #env:
       # CLUSTER_RESOURCE_GROUP_NAME: ${{ github.event.inputs.resourceGroup }}
       # CLUSTER_NAME: ${{ github.event.inputs.ClusterName }}
       # run: |
          # az aks update -n ${{ github.event.inputs.ClusterName }} -g ${{ github.event.inputs.resourceGroup }} --attach-acr ${{ github.event.inputs.containerregistry }}
        
    build-deploy:
           if: ${{ always() }}
           needs: [Azure-login, push-to-docker, helm-install]
           runs-on: ubuntu-latest
           steps:
             - uses:  azure/login@v1
             - name: Azure Login
               with:
                creds: ${{ secrets.AZURE_CREDENTIALS }}
            # deploy   
            # - name: deploy
                run: |
                 az aks get-credentials \
                 --resource-group ${{ github.event.inputs.resourceGroup }} \
                 --name ${{ github.event.inputs.ClusterName }} \
                 --overwrite-existing
                 helm upgrade -i ${{ github.event.inputs.appname }} ${{ github.event.inputs.helmchartname }}/ --set image.repository=${{ github.event.inputs.containerregistry }}.azurecr.io/${{ github.event.inputs.image}} --set image.tag=latest --wait
                 kubectl get services -o wide
