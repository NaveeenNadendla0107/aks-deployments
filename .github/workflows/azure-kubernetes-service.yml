name: Aks deploy
on: 
 workflow_dispatch:
   inputs:
     image:
      description: image
      required: true
      default: first-deploy-app
     
     containerregistry:
      description: 'containerregistry'
      required: true
      default: acr17
      
     ClusterName:
      description: 'clusterName'
      required: true
      default: 'test'
     
     resourceGroup:
      description: 'ClusterResourceGroup'
      required: true
      default: 'test01'
     
     appname:
      description: 'appname'
      required: true
      default: 'vote-app'
    
     #helmchartnamerepo:
      #description: 'helmchartname'
      #required: true
      #default: 'azure-vote-front'
   
     tag:
      description: 'image tag name'
      required: true
      default: 'latest'
     keyvault:
        description: 'keyvault Name'
        required: true
        default: 'testkey0107'
        
     secrets:
      description: 'secret vault name'
      required: true
      default: 'secretkey'   
     
     id: 
      description: 'Keyvault action ID'
      required: true
      default: 'keyvaultaction'
      
      

#env:
 #CLUSTER_RESOURCE_GROUP_NAME: ${{ github.event.inputs.resourceGroup }}
 #CLUSTER_NAME: ${{ github.event.inputs.ClusterName }}

 
  
jobs:
    #Azure-login:
      #name: Azure Login
     # runs-on: ubuntu-latest
      #steps:
       # - uses:  azure/login@v1
       # - name: Azure Login
        #  with:
         #  creds: ${{ secrets.AZURE_CREDENTIALS }}

    docker-build-and-push:
       #if: ${{ always() }}
       #needs: [Azure-login]
       runs-on: ubuntu-latest
       steps:
       - uses: actions/checkout@master
       - name: Azure Login
         uses: azure/login@v1
         with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
       - uses: Azure/get-keyvault-secrets@v1
         with:
          keyvault: ${{ github.event.inputs.keyvault }}
          secrets: ${{ github.event.inputs.secrets }}
          id: ${{ github.event.inputs.id }}
          
      # - uses: azure/docker-login@v1
        # with:
          #login-server: mycontainer.azurecr.io
         # username: ${{ steps.keyvaultaction.outputs.username }}
          #password: ${{ steps.keyvaultaction.outputs.password }}

       # Install build
       - name: build
         run: |
          az acr build --image ${{ github.event.inputs.image}}:${{ github.event.inputs.tag}} --registry ${{ github.event.inputs.containerregistry }} --file Dockerfile .
    helm-install:
          if: ${{ always() }}
          needs: [docker-build-and-push]

          #name: Install Helm
          runs-on: ubuntu-latest
          steps:
            - uses: actions/checkout@master
           # - name: Helm install
            - run: |
               curl https://raw.githubusercontent.com/helm/helm/master/scripts/get-helm-3 | bash
     
    
         #- name: deploy
      #env:
       # CLUSTER_RESOURCE_GROUP_NAME: ${{ github.event.inputs.resourceGroup }}
       # CLUSTER_NAME: ${{ github.event.inputs.ClusterName }}
       # run: |
          # az aks update -n ${{ github.event.inputs.ClusterName }} -g ${{ github.event.inputs.resourceGroup }} --attach-acr ${{ github.event.inputs.containerregistry }}
        
    deploy-to-aks:
           if: ${{ always() }}
           needs: [docker-build-and-push, helm-install]
           runs-on: ubuntu-latest
           steps:
            - uses: actions/checkout@master
            - uses:  azure/login@v1
             #- name: deploy
              with:
                creds: ${{ secrets.AZURE_CREDENTIALS }}
            # deploy   
            - name: deploy
              env:
                CLUSTER_RESOURCE_GROUP_NAME: ${{ github.event.inputs.resourceGroup }}
                CLUSTER_NAME: ${{ github.event.inputs.ClusterName }}
              run: |
                 az aks get-credentials \
                 --resource-group ${{ github.event.inputs.resourceGroup }} \
                 --name ${{ github.event.inputs.ClusterName }} \
                 --overwrite-existing
                
                 #helm upgrade -i ${{ github.event.inputs.appname }} ${{ github.event.inputs.helmchartname }}/ --set image.repository=${{ github.event.inputs.containerregistry }}.azurecr.io/${{ github.event.inputs.image}} --set image.tag=${{ github.event.inputs.tag}} --wait
                 #kubectl get services -o wide
                 helm pull https://github.com/NaveeenNadendla0107/remote-helm-charts/blob/main/azure-vote-front/azure-vote-front.zip ${{ github.event.inputs.appname }}/ image.repository=${{ github.event.inputs.containerregistry }}.azurecr.io/${{ github.event.inputs.image}} set image.tag=${{ github.event.inputs.tag}} --wait
                 #helm upgrade -i ${{ github.event.inputs.appname }} ${{ github.event.inputs.helmchartname }}/ --set image.repository=${{ github.event.inputs.containerregistry }}.azurecr.io/${{ github.event.inputs.image}} --set image.tag=${{ github.event.inputs.tag}} --wait
                 kubectl get services -o wide
