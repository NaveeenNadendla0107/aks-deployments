name: Aks deploy
on: 
 workflow_dispatch:
   inputs:
     image:
      description: 'image'
      required: true
      default: 'first'
     REGISTRY_LOGIN_SERVER:
      description: 'Registry server login'
      required: true
      default: 'blackbirdaks.azurecr.io'
     CLUSTER_RESOURCE_GROUP:
      description: 'Cluster Resource Group Name'
      required: true
      default: 'Test'
     CLUSTER_NAME:
      description: 'Cluster Name'
      required: true
      default: 'blackbird1'
     NAMESPACE:
      description: 'Namespace Name'
      required: true
      default: 'default'
     REPO:
      description: 'Repository Name'
      required: true
      default: 'blackbirdaks'
   
env:
  CLUSTER_NAME: ${{ github.event.inputs.CLUSTER_NAME }}
  CLUSTER_RESOURCE_GROUP: ${{ github.event.inputs.CLUSTER_RESOURCE_GROUP }}
  NAMESPACE: ${{ github.event.inputs.NAMESPACE }}
  REPO: ${{ github.event.inputs.REPO}}
  REGISTRY_LOGIN_SERVER: ${{ github.event.inputs.REGISTRY_LOGIN_SERVER}}
  IMAGE_NAME: ${{ github.event.inputs.image}}
  
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@master
    - name: Azure Login
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }} 
    
    #push build
    - name: build
      uses:  Azure/docker-login@v1
      with:
       login-server: ${{ env.REGISTRY_LOGIN_SERVER }}
       username: ${{ secrets.REGISTRY_USERNAME }}
       password: ${{ secrets.REGISTRY_PASSWORD }}
       run: | 
         docker build . -t ${{ env.REGISTRY_LOGIN_SERVER }}/${{env.IMAGE_NAME}}:${{ github.sha }}
         docker push ${{ env.REGISTRY_LOGIN_SERVER }}/${{env.IMAGE_NAME}}:${{ github.sha }}
        


     #'Install helm'
    - name: Install Helm
      run: |
        curl https://raw.githubusercontent.com/helm/helm/master/scripts/get-helm-3 | bash
        
   # - name: deploy
     # env:
       # CLUSTER_RESOURCE_GROUP_NAME: ${{ env.CLUSTER_RESOURCE_GROUP }}
        #CLUSTER_NAME: ${{ env.CLUSTER_NAME }}
     # run: |
       # az aks get-credentials \
         # --resource-group $CLUSTER_RESOURCE_GROUP \
          #--name $CLUSTER_NAME \
          #--overwrite-existing
        #helm upgrade -i vote-app azure-vote-front/ --set image.repository=${{ env.REPO }}.azurecr.io/demoapp --set image.tag=latest --wait
        #kubectl get services -o wide
        
        
                 #az acr build --image app:latest --registry ${{ env.REPO }} --file Dockerfile .
         ##docker build . -t ${{ env.REPO }}/${{ github.event.inputs.image }}:${{ github.sha }
         #docker push ${{ env.REPO }}/${{ github.event.inputs.image }}:${{ github.sha }}
         
         
        # Old one
         # az aks get-credentials \
        #  --resource-group $CLUSTER_RESOURCE_GROUP \
         # --name $CLUSTER_NAME \
         # --overwrite-existing
        #helm upgrade -i vote-app azure-vote-front/ --set image.repository=${{ env.REPO }}.azurecr.io/app --set image.tag=latest --wait
        #kubectl get services -o wide
             #docker build . -t ${{ env.REGISTRY_LOGIN_SERVER }}/${{env.IMAGE_NAME}}:${{ github.sha }}
         #docker push ${{ env.REGISTRY_LOGIN_SERVER }}/${{env.IMAGE_NAME}}:${{ github.sha }}
        
