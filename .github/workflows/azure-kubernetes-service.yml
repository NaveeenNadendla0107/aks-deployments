name: Aks deploy
on: 
 workflow_dispatch:
   inputs:
     image:
      description: 'image'
      required: true
      default: 'first'
    
     repository:
      description: 'RepositoryName'
      required: true
      default: 'Blackbirddev'
     ClusterName:
      description: 'clusterName'
      required: true
      default: 'Blackbird-aks'
     resourceGroup:
      description: 'ClusterResourceGroup'
      required: true
      default: 'Naveen'
     
   
env:
  clusterName: ${{ github.event.inputs.ClusterName }}
  ResourceGroup: ${{ github.event.inputs.resourceGroup }}
  #NAMESPACE: ${{ github.event.inputs.NAMESPACE }}
  RepositoryName: ${{ github.event.inputs.repository}}
  #REGISTRY_LOGIN_SERVER: ${{ github.event.inputs.REGISTRY_LOGIN_SERVER}}
  image: ${{ github.event.inputs.image}}
  creds: ${{ secrets.AZURE_CREDENTIALS }}
  
  
jobs:
  build:
    runs-on: ubuntu-latest
    environment: dev
    steps:
    - uses: actions/checkout@master
    
    # Connect to Azure Container registry (ACR)
    - uses: azure/docker-login@v1
      with:
        login-server: ${{ secrets.REGISTRY_LOGIN_SERVER }}
        username: ${{ secrets.REGISTRY_USERNAME }} 
        password: ${{ secrets.REGISTRY_PASSWORD }}
    
    # Container build and push to a Azure Container registry (ACR)
    - run: |
        docker build . -t ${{ secrets.REGISTRY_LOGIN_SERVER }}/${{ github.event.inputs.image}}:${{ github.sha }}
        docker push ${{ secrets.REGISTRY_LOGIN_SERVER }}/${{ github.event.inputs.image}}:${{ github.sha }}
     #'Install hellm'
    - name: Install Helm
      run: |
        curl https://raw.githubusercontent.com/helm/helm/master/scripts/get-helm-3 | bash
    - name: 'aks Set context'
      uses: azure/aks-set-context@v1
      with:
       creds: ${{ secrets.AZURE_CREDENTIALS }}
       resource-group: ${{ env.ResourceGroup }}
       cluster-name: ${{ env.clusterName }}
        
    - name: deploy
      env:
       ResourceGroup: ${{ env.ResourceGroup }}
       clusterName: ${{ env.clusterName }}
      run: |
       #az aks get-credentials -- ${{ secrets.AZURE_CREDENTIALS }} --name/${{ env.clusterName }} --overwrite-existing --resource-group/${{ env.ResourceGroup }}    
       az aks get-credentials ---- ${{ secrets.AZURE_CREDENTIALS }} --name Blackbird-aks --overwrite-existing --resource-group Naveen
       helm upgrade -i vote-app azure-vote-front/ --set image.repository=${{ env.RepositoryName }}.azurecr.io/${{env.image}} --set image.tag=latest --wait
        kubectl get services -o wide
