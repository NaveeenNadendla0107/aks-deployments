name: Aks deploy
on: 
 workflow_dispatch:
   inputs:
     image:
      description: 'image'
      required: true
      default: 'first'
    
     repository:
      description: 'Repository Name'
      required: true
      default: 'Blackbirddev'
     ClusterName:
      description: 'cluster Name'
      required: true
      default: 'Blackbird-aks'
     ClusterResourceGroup:
      description: 'ClusterResourceGroup'
      required: true
      default: 'Naveen'
     
   
env:
  CLUSTER_NAME: ${{ github.event.inputs.ClusterName }}
  CLUSTER_RESOURCE_GROUP: ${{ github.event.inputs.ClusterResourceGroup }}
  #NAMESPACE: ${{ github.event.inputs.NAMESPACE }}
  #REPO: ${{ github.event.inputs.REPO}}
  #REGISTRY_LOGIN_SERVER: ${{ github.event.inputs.REGISTRY_LOGIN_SERVER}}
  #IMAGE_NAME: ${{ github.event.inputs.image}}
  
jobs:
  build:
    runs-on: ubuntu-latest
    environment: dev
    steps:
    - uses: actions/checkout@master
    
    # Connect to Azure Container registry (ACR)
    - uses: azure/docker-login@v1
      with:
        login-server: ${{ secrets.REGISTRY_LOGIN_SERVER }}
        username: ${{ secrets.REGISTRY_USERNAME }} 
        password: ${{ secrets.REGISTRY_PASSWORD }}
    
    # Container build and push to a Azure Container registry (ACR)
    - run: |
        docker build . -t ${{ secrets.REGISTRY_LOGIN_SERVER }}/${{ github.event.inputs.image}}:${{ github.sha }}
        docker push ${{ secrets.REGISTRY_LOGIN_SERVER }}/${{ github.event.inputs.image}}:${{ github.sha }}
     #'Install hellm'
    - name: Install Helm
      run: |
        curl https://raw.githubusercontent.com/helm/helm/master/scripts/get-helm-3 | bash
        
    - name: deploy
      env:
        CLUSTER_RESOURCE_GROUP: ${{ env.CLUSTER_RESOURCE_GROUP }}
        CLUSTER_NAME: ${{ env.CLUSTER_NAME }}
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}
        run: |
         az login \
          --resource-group ${{ github.event.inputs.ClusterResourceGroup }} \
          --name ${{ github.event.inputs.ClusterName}} \
          --overwrite-existing
         helm upgrade -i vote-app azure-vote-front/ --set image.repository=${{ github.event.inputs.repository }}.azurecr.io/${{github.event.inputs.image}} --set image.tag=latest --wait
         kubectl get services -o wide
